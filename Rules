#!/usr/bin/env ruby

require 'compass'

Compass.add_project_configuration 'compass.rb'

preprocess do
  puts "Creating category pages..."
  create_category_pages
  create_categories_pages
  puts "done."
end

compile '/assets/stylesheets/*' do
  filter :sass, Compass.sass_engine_options.merge(:syntax => item[:extension].to_sym)
end

compile '/articles/*.haml' do
  filter :haml
  filter :erb
  filter :colorize_syntax, {
    default_colorizer: :pygmentsrb,
    encoding: 'utf-8',
    outside_pre: false,
  }
  layout '/article.*'
  layout '/default.*'
end


compile '/categories/*.html' do
  filter :erb
  layout '/category.*'
  layout '/default.*'
end

compile '/**/*.html' do
  filter :erb
  layout '/default.*'
end

compile '/**/*.haml' do
  filter :haml
  filter :erb
  layout '/default.*'
end

# This is an example rule that matches Markdown (.md) files, and filters them
# using the :kramdown filter. It is commented out by default, because kramdown
# is not bundled with Nanoc or Ruby.
#
#compile '/**/*.md' do
#  filter :kramdown
#  layout '/default.*'
#end

compile '/**/*' do
end

route '/assets/images/*' do
  #ignore images for now
end

route '/assets/javascripts/*' do
  #ignore javascripts for now
end

route '/assets/stylesheets/*' do
  # flatten assets to assets/ similar to rails
  '/assets/' + File.basename(item.identifier) + '.css'
end

route '/**/*.{haml,html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    item.identifier.without_ext + '/index.html'
  end
end

route '/**/*' do
  item.identifier.to_s
end

layout '/**/*', :haml, :format => :html5
